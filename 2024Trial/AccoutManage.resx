<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainPicBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        TYelZ/ep7LoAAAAASUVORK5CYII=
</value>
  </data>
</root>